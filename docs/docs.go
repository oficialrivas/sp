// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/casos": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Caso"
                ],
                "summary": "Crea un nuevo caso",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos del caso",
                        "name": "caso",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/casos/valorar/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Caso"
                ],
                "summary": "Valorar un caso",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del caso",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Valoraci√≥n",
                        "name": "valor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/casos/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Caso"
                ],
                "summary": "Obtiene un caso por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del caso",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Caso"
                ],
                "summary": "Actualiza un caso existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del caso a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos del caso a actualizar",
                        "name": "caso",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Caso"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Caso"
                ],
                "summary": "Elimina un caso por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del caso a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Caso eliminado exitosamente"
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/configuracion/acceso-temporal": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Otorga acceso temporal a un usuario de otra √°rea a una entidad espec√≠fica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuracion"
                ],
                "summary": "Otorga acceso temporal a un usuario a una entidad espec√≠fica",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos de acceso temporal",
                        "name": "access",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.AccessRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TemporaryAccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/configuracion/area": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza el nombre de un √°rea en la lista de √°reas v√°lidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuracion"
                ],
                "summary": "Actualiza un √°rea",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos del √°rea",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Agrega un √°rea nueva a la lista de √°reas v√°lidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuracion"
                ],
                "summary": "Agrega un √°rea nueva",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Nombre del √°rea",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.AddAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un √°rea de la lista de √°reas v√°lidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "configuracion"
                ],
                "summary": "Elimina un √°rea",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Nombre del √°rea",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RemoveAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/correos": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Correo"
                ],
                "summary": "Crea un nuevo correo",
                "parameters": [
                    {
                        "description": "Datos de la direcci√≥n a crear",
                        "name": "correo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Tipo del correo",
                        "name": "tipo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "√Årea del correo",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Direcci√≥n del correo",
                        "name": "direccion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del representante",
                        "name": "representante_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    }
                }
            }
        },
        "/correos/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Correo"
                ],
                "summary": "Obtiene un correo por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del correo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Correo"
                ],
                "summary": "Actualiza un correo existente por su ID",
                "parameters": [
                    {
                        "description": "Datos del correo a actualizar",
                        "name": "direccion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del correo a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tipo del correo",
                        "name": "tipo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "√Årea del correo",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Direcci√≥n del correo",
                        "name": "direccion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del representante",
                        "name": "representante_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Correo"
                ],
                "summary": "Elimina un correo por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del correo a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Correo"
                        }
                    },
                    "204": {
                        "description": "Correo eliminado exitosamente"
                    }
                }
            }
        },
        "/direcciones": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Direccion"
                ],
                "summary": "Crea una nueva direcci√≥n",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos de la direcci√≥n a crear",
                        "name": "direccion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Direccion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Direccion"
                        }
                    }
                }
            }
        },
        "/direcciones/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Direccion"
                ],
                "summary": "Obtiene una direcci√≥n por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la direcci√≥n",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Direccion"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Direccion"
                ],
                "summary": "Actualiza una direcci√≥n existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la direcci√≥n a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de la direcci√≥n a actualizar",
                        "name": "direccion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Direccion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Direccion"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Direccion"
                ],
                "summary": "Elimina una direcci√≥n por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la direcci√≥n a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Direcci√≥n eliminada exitosamente"
                    }
                }
            }
        },
        "/documentos": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documento"
                ],
                "summary": "Crea un nuevo documento",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "N√∫mero del documento",
                        "name": "numero",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Archivo del documento",
                        "name": "documento",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Nombre del documento",
                        "name": "nombre",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo del documento",
                        "name": "tipo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "C√≥digo √∫nico del documento",
                        "name": "codigo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nivel del documento",
                        "name": "nivel",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Documento"
                        }
                    }
                }
            }
        },
        "/documentos/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documento"
                ],
                "summary": "Obtiene un documento por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del documento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Documento"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documento"
                ],
                "summary": "Actualiza un documento existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del documento a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "N√∫mero del documento",
                        "name": "numero",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Archivo del documento",
                        "name": "documento",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Nombre del documento",
                        "name": "nombre",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo del documento",
                        "name": "tipo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "C√≥digo √∫nico del documento",
                        "name": "codigo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nivel del documento",
                        "name": "nivel",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Documento"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documento"
                ],
                "summary": "Elimina un documento por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del documento a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Documento eliminado exitosamente"
                    }
                }
            }
        },
        "/empresas": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Empresa"
                ],
                "summary": "Crea una nueva empresa",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos de la empresa a crear",
                        "name": "empresa",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Empresa"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Empresa"
                        }
                    }
                }
            }
        },
        "/empresas/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Empresa"
                ],
                "summary": "Obtiene una empresa por su RIF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "RIF de la empresa",
                        "name": "rif",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Empresa"
                        }
                    }
                }
            }
        },
        "/empresas/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Empresa"
                ],
                "summary": "Obtiene una empresa por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la empresa",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Empresa"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Empresa"
                ],
                "summary": "Actualiza una empresa existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la empresa a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de la empresa a actualizar",
                        "name": "empresa",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Empresa"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Empresa"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Empresa"
                ],
                "summary": "Elimina una empresa por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la empresa a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Empresa eliminada exitosamente"
                    }
                }
            }
        },
        "/gestion": {
            "post": {
                "description": "Obtiene el n√∫mero de registros para un √°rea espec√≠fica en un per√≠odo determinado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registros"
                ],
                "summary": "Devuelve el n√∫mero de registros de un √°rea en un per√≠odo espec√≠fico",
                "parameters": [
                    {
                        "description": "Par√°metros de consulta",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RequestParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gestion/area-modalidad": {
            "post": {
                "description": "Obtiene el n√∫mero de registros por √°rea y modalidad en un per√≠odo determinado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registros"
                ],
                "summary": "Devuelve el n√∫mero de registros por √°rea y modalidad en un per√≠odo espec√≠fico",
                "parameters": [
                    {
                        "description": "Par√°metros de consulta",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.PeriodRequestParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.AreaModalidadCount"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gestion/por-area": {
            "post": {
                "description": "Obtiene el n√∫mero de registros por √°rea en un per√≠odo determinado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registros"
                ],
                "summary": "Devuelve el n√∫mero de registros por √°rea en un per√≠odo espec√≠fico",
                "parameters": [
                    {
                        "description": "Par√°metros de consulta",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.PeriodRequestParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.RecordsCountByArea"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gestion/user": {
            "post": {
                "description": "Obtiene el n√∫mero de registros para un √°rea espec√≠fica en un per√≠odo determinado para un usuario espec√≠fico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registros"
                ],
                "summary": "Devuelve el n√∫mero de registros de un √°rea en un per√≠odo espec√≠fico para un usuario espec√≠fico",
                "parameters": [
                    {
                        "description": "Par√°metros de consulta",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserPeriodRequestParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/gestion/user-area-modalidad": {
            "post": {
                "description": "Obtiene el n√∫mero de registros por √°rea y modalidad en un per√≠odo determinado para un usuario espec√≠fico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registros"
                ],
                "summary": "Devuelve el n√∫mero de registros por √°rea y modalidad en un per√≠odo espec√≠fico para un usuario espec√≠fico",
                "parameters": [
                    {
                        "description": "Par√°metros de consulta",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UserPeriodRequestParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.UserAreaModalidadCount"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/iios": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene todos los registros de IIO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iio"
                ],
                "summary": "Obtiene todas las IIOs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IIO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crea un nuevo registro de IIO con los datos proporcionados",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iio"
                ],
                "summary": "Crea un nuevo registro de IIO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Descripci√≥n del IIO",
                        "name": "descripcion",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fecha del IIO (YYYY-MM-DD)",
                        "name": "fecha",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lugar del IIO",
                        "name": "lugar",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Modalidad del IIO",
                        "name": "modalidad",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nombre del IIO",
                        "name": "nombre",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parroquia del IIO",
                        "name": "parroquia",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "REDI del IIO",
                        "name": "redi",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ZODI del IIO",
                        "name": "zodi",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TIE del IIO",
                        "name": "tie",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "√Årea del IIO",
                        "name": "area",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del IIO",
                        "name": "imagen",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IIO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/iios/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene registros de IIO en un periodo espec√≠fico, y filtrados por tie, redi, zodi y modalidad",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iio"
                ],
                "summary": "Obtiene IIOs filtrados",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fecha de inicio (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fecha de fin (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "TIE",
                        "name": "tie",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "REDI",
                        "name": "redi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ZODI",
                        "name": "zodi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Modalidad",
                        "name": "modalidad",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IIO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/iios/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de un IIO por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iio"
                ],
                "summary": "Obtiene un IIO por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del IIO",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IIO"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza los datos de un IIO existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iio"
                ],
                "summary": "Actualiza un IIO existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del IIO",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos del IIO actualizados",
                        "name": "iio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IIO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.IIO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un IIO por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iio"
                ],
                "summary": "Elimina un IIO por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del IIO",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica a un usuario con correo y contrase√±a, y genera un token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Autentica a un usuario",
                "parameters": [
                    {
                        "description": "Credenciales de inicio de sesi√≥n",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mensajes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene todos los registros de Mensaje",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mensaje"
                ],
                "summary": "Obtiene todos los Mensajes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Mensaje"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crea un nuevo registro de Mensaje con los datos proporcionados",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mensaje"
                ],
                "summary": "Crea un nuevo registro de Mensaje",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Descripci√≥n del Mensaje",
                        "name": "descripcion",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fecha del Mensaje (YYYY-MM-DD)",
                        "name": "fecha",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lugar del Mensaje",
                        "name": "lugar",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Modalidad del Mensaje",
                        "name": "modalidad",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nombre del Mensaje",
                        "name": "nombre",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parroquia del Mensaje",
                        "name": "parroquia",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "REDI del Mensaje",
                        "name": "redi",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ZODI del Mensaje",
                        "name": "zodi",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ADI del Mensaje",
                        "name": "adi",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TIE del Mensaje",
                        "name": "tie",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "√Årea del Mensaje",
                        "name": "area",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Procesado",
                        "name": "procesado",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del Mensaje",
                        "name": "imagen",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Mensaje"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mensajes/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene registros de Mensaje en un periodo espec√≠fico, y filtrados por tie, redi, zodi y modalidad",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mensaje"
                ],
                "summary": "Obtiene Mensajes filtrados",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fecha de inicio (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fecha de fin (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "TIE",
                        "name": "tie",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "REDI",
                        "name": "redi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ZODI",
                        "name": "zodi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ADI",
                        "name": "adi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Modalidad",
                        "name": "modalidad",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Mensaje"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/mensajes/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de un Mensaje por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mensaje"
                ],
                "summary": "Obtiene un Mensaje por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del Mensaje",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Mensaje"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza los datos de un Mensaje existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mensaje"
                ],
                "summary": "Actualiza un Mensaje existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del Mensaje",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos del Mensaje actualizados",
                        "name": "mensaje",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Mensaje"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Mensaje"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un Mensaje por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mensaje"
                ],
                "summary": "Elimina un Mensaje por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del Mensaje",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/pasaportes": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pasaporte"
                ],
                "summary": "Crea un nuevo pasaporte",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "N√∫mero del pasaporte",
                        "name": "numero",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Foto del pasaporte",
                        "name": "foto",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Pa√≠s del pasaporte",
                        "name": "pais",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo del pasaporte",
                        "name": "tipo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "C√≥digo √∫nico del pasaporte",
                        "name": "codigo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del representante",
                        "name": "representante_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nivel del pasaporte",
                        "name": "nivel",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Pasaporte"
                        }
                    }
                }
            }
        },
        "/pasaportes/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pasaporte"
                ],
                "summary": "Obtiene un pasaporte por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del pasaporte",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pasaporte"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pasaporte"
                ],
                "summary": "Actualiza un pasaporte existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del pasaporte a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "N√∫mero del pasaporte",
                        "name": "numero",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Foto del pasaporte",
                        "name": "foto",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Pa√≠s del pasaporte",
                        "name": "pais",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo del pasaporte",
                        "name": "tipo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "C√≥digo √∫nico del pasaporte",
                        "name": "codigo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del representante",
                        "name": "representante_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nivel del pasaporte",
                        "name": "nivel",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pasaporte"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pasaporte"
                ],
                "summary": "Elimina un pasaporte por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del pasaporte a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pasaporte eliminado exitosamente"
                    }
                }
            }
        },
        "/personas": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de todos los Personas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene todos los Personas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Persona"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crea un nuevo registro de Persona con los datos proporcionados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Crea un nuevo registro de Persona",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos del Persona",
                        "name": "persona",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/cedula/{cedula}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de un Persona por su n√∫mero de c√©dula",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene un Persona por su n√∫mero de c√©dula",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "C√©dula del Persona",
                        "name": "cedula",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/cedulas": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de personas por una lista de c√©dulas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene personas por una lista de c√©dulas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lista de c√©dulas separadas por comas",
                        "name": "cedulas",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Persona"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/nacionalidad/{nacionalidad}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de todos los Personas que pertenecen a una nacionalidad espec√≠fica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene todos los Personas por su nacionalidad",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nacionalidad de los Personas",
                        "name": "nacionalidad",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Persona"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/nombre/{nombre}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de un Persona por su nombre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene un Persona por su nombre",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nombre del Persona",
                        "name": "nombre",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/pasaporte/{pasaporte}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de un Persona por su n√∫mero de pasaporte",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene un Persona por su n√∫mero de pasaporte",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pasaporte del Persona",
                        "name": "pasaporte",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/search": {
            "get": {
                "description": "Busca personas en la tabla persona usando un √≠ndice de texto completo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Busca personas usando texto completo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Texto de b√∫squeda",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Persona"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/personas/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Obtiene los datos de un Persona por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Obtiene un Persona por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del Persona",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza los datos de un Persona existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Actualiza un Persona existente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del Persona",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos del Persona actualizados",
                        "name": "persona",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Persona"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina un Persona por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "persona"
                ],
                "summary": "Elimina un Persona por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del Persona",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/redes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redes"
                ],
                "summary": "Crea una nueva entrada de red",
                "parameters": [
                    {
                        "description": "Datos de la red a crear",
                        "name": "redes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Redes"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Redes"
                        }
                    }
                }
            }
        },
        "/redes/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redes"
                ],
                "summary": "Obtiene una entrada de red por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la red",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Redes"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redes"
                ],
                "summary": "Actualiza una entrada de red existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la red a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de la red a actualizar",
                        "name": "redes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Redes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Redes"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redes"
                ],
                "summary": "Elimina una entrada de red por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la red a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Red eliminada exitosamente"
                    }
                }
            }
        },
        "/refresh-token": {
            "post": {
                "description": "Renueva el accessToken usando el refreshToken proporcionado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Renueva el accessToken",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "tokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Crea un nuevo usuario con los datos proporcionados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Crea un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos del usuario",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtiene una lista de todos los usuarios",
                "consumes": [
                    "application/json",
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Obtiene todos los usuarios",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Obtiene los datos de un usuario por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Obtiene un usuario por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un usuario por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Actualiza un usuario por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos actualizados del usuario",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Borra un usuario de la base de datos por su ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Borra un usuario por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/otp-setup": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Genera un secreto OTP y proporciona un URL en formato QR para configurar Google Authenticator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Genera un secreto OTP y un URL para configurar Google Authenticator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OTPResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/password": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza la contrase√±a de un usuario verificando el OTP para administradores",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Actualiza la contrase√±a de un usuario",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos de la solicitud para actualizar la contrase√±a",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vehiculos": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehiculo"
                ],
                "summary": "Crea un nuevo veh√≠culo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Datos del veh√≠culo a crear",
                        "name": "vehiculo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Vehiculo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Vehiculo"
                        }
                    }
                }
            }
        },
        "/vehiculos/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehiculo"
                ],
                "summary": "Obtiene un veh√≠culo por su matr√≠cula",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Matr√≠cula del veh√≠culo",
                        "name": "matricula",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Vehiculo"
                        }
                    }
                }
            }
        },
        "/vehiculos/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehiculo"
                ],
                "summary": "Obtiene un veh√≠culo por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del veh√≠culo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Vehiculo"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehiculo"
                ],
                "summary": "Actualiza un veh√≠culo existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del veh√≠culo a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Datos del veh√≠culo a actualizar",
                        "name": "vehiculo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Vehiculo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Vehiculo"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehiculo"
                ],
                "summary": "Elimina un veh√≠culo por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID del veh√≠culo a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Veh√≠culo eliminado exitosamente"
                    }
                }
            }
        },
        "/visas": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visa"
                ],
                "summary": "Crea una nueva visa",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Valoraci√≥n de la visa",
                        "name": "valoracion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pa√≠s de la visa",
                        "name": "pais",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tipo de visa",
                        "name": "tipo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "C√≥digo √∫nico de la visa",
                        "name": "codigo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del representante",
                        "name": "representante_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Nivel de la visa",
                        "name": "nivel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Visa"
                        }
                    }
                }
            }
        },
        "/visas/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visa"
                ],
                "summary": "Obtiene una visa por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la visa",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Visa"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visa"
                ],
                "summary": "Actualiza una visa existente por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la visa a actualizar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Valoraci√≥n de la visa",
                        "name": "valoracion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Pa√≠s de la visa",
                        "name": "pais",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tipo de visa",
                        "name": "tipo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "C√≥digo √∫nico de la visa",
                        "name": "codigo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del representante",
                        "name": "representante_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Nivel de la visa",
                        "name": "nivel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "ID del usuario",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Visa"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visa"
                ],
                "summary": "Elimina una visa por su ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID de la visa a eliminar",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Visa eliminada exitosamente"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.AccessRequest": {
            "type": "object",
            "required": [
                "entity_id",
                "entity_type",
                "expires_at",
                "user_id"
            ],
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "controllers.AddAreaRequest": {
            "type": "object",
            "required": [
                "area"
            ],
            "properties": {
                "area": {
                    "type": "string"
                }
            }
        },
        "controllers.AreaModalidadCount": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "casos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ModalidadCount"
                    }
                },
                "iios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ModalidadCount"
                    }
                }
            }
        },
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.ModalidadCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "modalidad": {
                    "type": "string"
                }
            }
        },
        "controllers.OTPResponse": {
            "type": "object",
            "properties": {
                "otp_url": {
                    "type": "string"
                }
            }
        },
        "controllers.PeriodRequestParams": {
            "type": "object",
            "required": [
                "end_date",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "controllers.RecordsCountByArea": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "casos_count": {
                    "type": "integer"
                },
                "direcciones_count": {
                    "type": "integer"
                },
                "documentos_count": {
                    "type": "integer"
                },
                "empresas_count": {
                    "type": "integer"
                },
                "iios_count": {
                    "type": "integer"
                },
                "personas_count": {
                    "type": "integer"
                },
                "vehiculos_count": {
                    "type": "integer"
                }
            }
        },
        "controllers.RemoveAreaRequest": {
            "type": "object",
            "required": [
                "area"
            ],
            "properties": {
                "area": {
                    "type": "string"
                }
            }
        },
        "controllers.RequestParams": {
            "type": "object",
            "required": [
                "area",
                "end_date",
                "start_date"
            ],
            "properties": {
                "area": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "controllers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.UpdateAreaRequest": {
            "type": "object",
            "required": [
                "new_area",
                "old_area"
            ],
            "properties": {
                "new_area": {
                    "type": "string"
                },
                "old_area": {
                    "type": "string"
                }
            }
        },
        "controllers.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "otp": {
                    "type": "string"
                }
            }
        },
        "controllers.UserAreaModalidadCount": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "casos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ModalidadCount"
                    }
                },
                "iios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.ModalidadCount"
                    }
                }
            }
        },
        "controllers.UserPeriodRequestParams": {
            "type": "object",
            "required": [
                "end_date",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Caso": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "direcciones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Direccion"
                    }
                },
                "documento": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Documento"
                    }
                },
                "empresas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Empresa"
                    }
                },
                "id": {
                    "type": "string"
                },
                "iio": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IIO"
                    }
                },
                "modalidad": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "relacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "tie": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "vanalista": {
                    "type": "integer"
                },
                "vcoordinador": {
                    "type": "integer"
                },
                "vdirector": {
                    "type": "integer"
                },
                "vehiculos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vehiculo"
                    }
                }
            }
        },
        "models.Correo": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "dueno": {
                    "$ref": "#/definitions/models.Persona"
                },
                "dueno_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "cedula": {
                    "type": "string"
                },
                "correo": {
                    "type": "string"
                },
                "credencial": {
                    "type": "string"
                },
                "nivel": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "redi": {
                    "type": "string"
                },
                "telefono": {
                    "type": "string"
                },
                "tie": {
                    "type": "string"
                }
            }
        },
        "models.Direccion": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dueno": {
                    "$ref": "#/definitions/models.Persona"
                },
                "dueno_id": {
                    "type": "string"
                },
                "empleados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "estado": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lugar": {
                    "type": "string"
                },
                "municipio": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "parroquia": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "urbanizacion": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "usuarios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                }
            }
        },
        "models.Documento": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "documento": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "relacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Empresa": {
            "type": "object",
            "properties": {
                "actividad_economica": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "empleados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "representante": {
                    "$ref": "#/definitions/models.Persona"
                },
                "representante_id": {
                    "type": "string"
                },
                "rif": {
                    "type": "string"
                },
                "socios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.IIO": {
            "type": "object",
            "properties": {
                "adi": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "descripcion": {
                    "type": "string"
                },
                "fecha": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imagen_url": {
                    "type": "string"
                },
                "lugar": {
                    "type": "string"
                },
                "modalidad": {
                    "type": "string"
                },
                "nivel": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "parroquia": {
                    "type": "string"
                },
                "procesado": {
                    "type": "boolean"
                },
                "redi": {
                    "type": "string"
                },
                "relacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "tie": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "urbanizacion": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "zodi": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "correo",
                "password"
            ],
            "properties": {
                "correo": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Mensaje": {
            "type": "object",
            "properties": {
                "adi": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "descripcion": {
                    "type": "string"
                },
                "fecha": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imagen_url": {
                    "type": "string"
                },
                "lugar": {
                    "type": "string"
                },
                "modalidad": {
                    "type": "string"
                },
                "nivel": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "parroquia": {
                    "type": "string"
                },
                "procesado": {
                    "type": "boolean"
                },
                "redi": {
                    "type": "string"
                },
                "relacion": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "tie": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "urbanizacion": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "zodi": {
                    "type": "string"
                }
            }
        },
        "models.Nacionalidad": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gentilicio": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Pasaporte": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "foto": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "pais": {
                    "type": "string"
                },
                "representante": {
                    "$ref": "#/definitions/models.Persona"
                },
                "representante_id": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Persona": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "apellido": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "cargo_actual": {
                    "type": "string"
                },
                "cedula": {
                    "type": "string"
                },
                "correo": {
                    "type": "string"
                },
                "correos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Correo"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "direcciones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Direccion"
                    }
                },
                "empresas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Empresa"
                    }
                },
                "estado_civil": {
                    "type": "string"
                },
                "filiacion_politica": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ideologia": {
                    "type": "string"
                },
                "iio": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IIO"
                    }
                },
                "informacion_de_interes": {
                    "type": "string"
                },
                "nacionalidad": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Nacionalidad"
                    }
                },
                "nombre": {
                    "type": "string"
                },
                "pasaporte": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Pasaporte"
                    }
                },
                "profesion": {
                    "type": "string"
                },
                "redes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Redes"
                    }
                },
                "relacionados": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "religion": {
                    "type": "string"
                },
                "telefono": {
                    "type": "string"
                },
                "tipo_perfil": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "valoraciones": {
                    "type": "string"
                },
                "vehiculos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vehiculo"
                    }
                },
                "visa": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Visa"
                    }
                }
            }
        },
        "models.Redes": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "dueno": {
                    "$ref": "#/definitions/models.Persona"
                },
                "dueno_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.TemporaryAccess": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "refreshToken": {
                    "description": "Optional Refresh Token",
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "adi": {
                    "type": "string"
                },
                "apellido": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "cedula": {
                    "type": "string"
                },
                "correo": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "credencial": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nivel": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "otp_secret": {
                    "type": "string"
                },
                "parroquia": {
                    "type": "string"
                },
                "redi": {
                    "type": "string"
                },
                "telefono": {
                    "type": "string"
                },
                "tie": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Vehiculo": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                },
                "a√±o": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "linea": {
                    "type": "string"
                },
                "marca": {
                    "type": "string"
                },
                "matricula": {
                    "type": "string"
                },
                "modelo": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "propietario": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "usuarios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Persona"
                    }
                },
                "vehiculo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IIO"
                    }
                }
            }
        },
        "models.Visa": {
            "type": "object",
            "properties": {
                "aprobada": {
                    "type": "boolean"
                },
                "area": {
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pais": {
                    "type": "string"
                },
                "representante": {
                    "$ref": "#/definitions/models.Persona"
                },
                "representante_id": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "valoracion": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "API",
	Description:      "API SISTEMA DE EXPLORACION POPULAR.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
